// src/redux/reducers/templateReducer.ts

import {
    FETCH_TEMPLATES_START,
    FETCH_TEMPLATES_SUCCESS,
    FETCH_TEMPLATES_FAIL,
} from '../actions/templateActions';

interface TemplateState {
  templatesByCategory: { [category: string]: any[] };
  loading: boolean;
  error: string | null;
}

const initialState: TemplateState = {
  templatesByCategory: {},
  loading: false,
  error: null,
};

export const templateReducer = (state = initialState, action: any): TemplateState => {
  switch (action.type) {
    case FETCH_TEMPLATES_START:
      return { ...state, loading: true, error: null };
    case FETCH_TEMPLATES_SUCCESS:
      return { ...state, loading: false, templatesByCategory: action.payload };
    case FETCH_TEMPLATES_FAIL:
      return { ...state, loading: false, error: action.payload };
    default:
      return state;
  }
};

// export default templateReducer;
